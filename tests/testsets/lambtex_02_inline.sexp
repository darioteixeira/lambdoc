(Valid((content(((blk(Paragraph(((inl(Plain"Here we have examples of text in "))(attr((classnames())(parsinfo(((tag())(linenum 1)(originator Source)))))))((inl(Bold(((inl(Plain bold))(attr((classnames())(parsinfo(((tag())(linenum 1)(originator Source))))))))))(attr((classnames())(parsinfo(((tag("\\bold"))(linenum 1)(originator Source)))))))((inl(Plain" and "))(attr((classnames())(parsinfo(((tag())(linenum 1)(originator Source)))))))((inl(Emph(((inl(Plain emphasised))(attr((classnames())(parsinfo(((tag())(linenum 1)(originator Source))))))))))(attr((classnames())(parsinfo(((tag("\\emph"))(linenum 1)(originator Source)))))))((inl(Plain" and "))(attr((classnames())(parsinfo(((tag())(linenum 1)(originator Source)))))))((inl(Code(((inl(Plain monospaced))(attr((classnames())(parsinfo(((tag())(linenum 1)(originator Source))))))))))(attr((classnames())(parsinfo(((tag("\\code"))(linenum 1)(originator Source)))))))((inl(Plain" and in "))(attr((classnames())(parsinfo(((tag())(linenum 1)(originator Source)))))))((inl(Caps(((inl(Plain small-caps))(attr((classnames())(parsinfo(((tag())(linenum 2)(originator Source))))))))))(attr((classnames())(parsinfo(((tag("\\caps"))(linenum 2)(originator Source)))))))((inl(Plain" and with "))(attr((classnames())(parsinfo(((tag())(linenum 2)(originator Source)))))))((inl(Sup(((inl(Plain superscripts))(attr((classnames())(parsinfo(((tag())(linenum 2)(originator Source))))))))))(attr((classnames())(parsinfo(((tag("\\sup"))(linenum 2)(originator Source)))))))((inl(Plain" and "))(attr((classnames())(parsinfo(((tag())(linenum 2)(originator Source)))))))((inl(Sub(((inl(Plain subscripts))(attr((classnames())(parsinfo(((tag())(linenum 2)(originator Source))))))))))(attr((classnames())(parsinfo(((tag("\\sub"))(linenum 2)(originator Source)))))))((inl(Plain". You may also correct "))(attr((classnames())(parsinfo(((tag())(linenum 2)(originator Source)))))))((inl(Del(((inl(Plain perfect))(attr((classnames())(parsinfo(((tag())(linenum 3)(originator Source))))))))))(attr((classnames())(parsinfo(((tag("\\del"))(linenum 3)(originator Source)))))))((inl(Ins(((inl(Plain broken))(attr((classnames())(parsinfo(((tag())(linenum 3)(originator Source))))))))))(attr((classnames())(parsinfo(((tag("\\ins"))(linenum 3)(originator Source)))))))((inl(Plain" text. Also, "))(attr((classnames())(parsinfo(((tag())(linenum 3)(originator Source)))))))((inl(Mbox(((inl(Emph(((inl(Plain"all of this emphasised text should appear on the same line."))(attr((classnames())(parsinfo(((tag())(linenum 3)(originator Source))))))))))(attr((classnames())(parsinfo(((tag("\\emph"))(linenum 3)(originator Source))))))))))(attr((classnames())(parsinfo(((tag("\\mbox"))(linenum 3)(originator Source)))))))((inl(Plain" It is possible to enter "))(attr((classnames())(parsinfo(((tag())(linenum 4)(originator Source)))))))((inl(Caps(((inl(Plain HTML))(attr((classnames())(parsinfo(((tag())(linenum 4)(originator Source))))))))))(attr((classnames())(parsinfo(((tag("\\caps"))(linenum 4)(originator Source)))))))((inl(Plain" entities either by name ("))(attr((classnames())(parsinfo(((tag())(linenum 4)(originator Source)))))))((inl(Code(((inl(Plain"&euro;"))(attr((classnames())(parsinfo(((tag())(linenum 5)(originator Source))))))))))(attr((classnames())(parsinfo(((tag("\\code"))(linenum 5)(originator Source)))))))((inl(Plain" produces '\226\130\172'), by decimal code point ("))(attr((classnames())(parsinfo(((tag())(linenum 5)(originator Source)))))))((inl(Code(((inl(Plain"&#8364;"))(attr((classnames())(parsinfo(((tag())(linenum 5)(originator Source))))))))))(attr((classnames())(parsinfo(((tag("\\code"))(linenum 5)(originator Source)))))))((inl(Plain" produces '\226\130\172'), or by hexadecimal code point ("))(attr((classnames())(parsinfo(((tag())(linenum 5)(originator Source)))))))((inl(Code(((inl(Plain"&#x20ac;"))(attr((classnames())(parsinfo(((tag())(linenum 6)(originator Source))))))))))(attr((classnames())(parsinfo(((tag("\\code"))(linenum 6)(originator Source)))))))((inl(Plain" produces '\226\130\172'). You can also enter en-dashes ("))(attr((classnames())(parsinfo(((tag())(linenum 6)(originator Source)))))))((inl(Code(((inl(Plain --))(attr((classnames())(parsinfo(((tag())(linenum 7)(originator Source))))))))))(attr((classnames())(parsinfo(((tag("\\code"))(linenum 7)(originator Source)))))))((inl(Plain" produces '\226\128\147'), em-dashes ("))(attr((classnames())(parsinfo(((tag())(linenum 7)(originator Source)))))))((inl(Code(((inl(Plain ---))(attr((classnames())(parsinfo(((tag())(linenum 7)(originator Source))))))))))(attr((classnames())(parsinfo(((tag("\\code"))(linenum 7)(originator Source)))))))((inl(Plain" produces '\226\128\148'), and proper double quotes (ex: \226\128\156hello\226\128\157). The input charset is "))(attr((classnames())(parsinfo(((tag())(linenum 7)(originator Source)))))))((inl(Caps(((inl(Plain utf-8))(attr((classnames())(parsinfo(((tag())(linenum 9)(originator Source))))))))))(attr((classnames())(parsinfo(((tag("\\caps"))(linenum 9)(originator Source)))))))((inl(Plain", so you can \226\128\148 for example \226\128\148 enter Japanese characters directly: \227\129\138\227\129\170\227\129\139\227\129\140\227\129\132\227\129\163\227\129\177\227\129\132\227\129\167\227\129\153\227\129\139\227\130\137\227\129\170\227\129\171\227\130\130\227\129\159\227\129\185\227\129\159\227\129\143\227\129\170\227\129\132\227\129\167\227\129\153."))(attr((classnames())(parsinfo(((tag())(linenum 9)(originator Source))))))))))(attr((classnames())(parsinfo(((tag())(linenum 1)(originator Source)))))))))(bibs())(notes())(toc())(labels())(customs())))