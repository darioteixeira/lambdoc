(Valid((content(((blk(Paragraph(((inl(Plain"Here we have examples of text in "))(attr((classnames())(parsinfo(((tag())(linenum 1)(originator Source)))))))((inl(Bold(((inl(Plain bold))(attr((classnames())(parsinfo(((tag())(linenum 1)(originator Source))))))))))(attr((classnames())(parsinfo(((tag("\\bold"))(linenum 1)(originator Source)))))))((inl(Plain" and "))(attr((classnames())(parsinfo(((tag())(linenum 1)(originator Source)))))))((inl(Emph(((inl(Plain emphasised))(attr((classnames())(parsinfo(((tag())(linenum 1)(originator Source))))))))))(attr((classnames())(parsinfo(((tag("\\emph"))(linenum 1)(originator Source)))))))((inl(Plain .))(attr((classnames())(parsinfo(((tag())(linenum 1)(originator Source))))))))))(attr((classnames())(parsinfo(((tag())(linenum 1)(originator Source)))))))((blk(Paragraph(((inl(Plain"Here's "))(attr((classnames())(parsinfo(((tag())(linenum 3)(originator Source)))))))((inl(Mono(((inl(Plain monospaced))(attr((classnames())(parsinfo(((tag())(linenum 3)(originator Source))))))))))(attr((classnames())(parsinfo(((tag("\\mono"))(linenum 3)(originator Source)))))))((inl(Plain" and "))(attr((classnames())(parsinfo(((tag())(linenum 3)(originator Source)))))))((inl(Caps(((inl(Plain small-caps))(attr((classnames())(parsinfo(((tag())(linenum 3)(originator Source))))))))))(attr((classnames())(parsinfo(((tag("\\caps"))(linenum 3)(originator Source)))))))((inl(Plain" text."))(attr((classnames())(parsinfo(((tag())(linenum 3)(originator Source))))))))))(attr((classnames())(parsinfo(((tag())(linenum 3)(originator Source)))))))((blk(Paragraph(((inl(Plain"You can use "))(attr((classnames())(parsinfo(((tag())(linenum 5)(originator Source)))))))((inl(Sup(((inl(Plain superscripts))(attr((classnames())(parsinfo(((tag())(linenum 5)(originator Source))))))))))(attr((classnames())(parsinfo(((tag("\\sup"))(linenum 5)(originator Source)))))))((inl(Plain" and "))(attr((classnames())(parsinfo(((tag())(linenum 5)(originator Source)))))))((inl(Sub(((inl(Plain subscripts))(attr((classnames())(parsinfo(((tag())(linenum 5)(originator Source))))))))))(attr((classnames())(parsinfo(((tag("\\sub"))(linenum 5)(originator Source)))))))((inl(Plain .))(attr((classnames())(parsinfo(((tag())(linenum 5)(originator Source))))))))))(attr((classnames())(parsinfo(((tag())(linenum 5)(originator Source)))))))((blk(Paragraph(((inl(Plain"You may also correct "))(attr((classnames())(parsinfo(((tag())(linenum 7)(originator Source)))))))((inl(Del(((inl(Plain perfect))(attr((classnames())(parsinfo(((tag())(linenum 7)(originator Source))))))))))(attr((classnames())(parsinfo(((tag("\\del"))(linenum 7)(originator Source)))))))((inl(Ins(((inl(Plain broken))(attr((classnames())(parsinfo(((tag())(linenum 7)(originator Source))))))))))(attr((classnames())(parsinfo(((tag("\\ins"))(linenum 7)(originator Source)))))))((inl(Plain" text."))(attr((classnames())(parsinfo(((tag())(linenum 7)(originator Source))))))))))(attr((classnames())(parsinfo(((tag())(linenum 7)(originator Source)))))))((blk(Paragraph(((inl(Plain"Also, "))(attr((classnames())(parsinfo(((tag())(linenum 9)(originator Source)))))))((inl(Mbox(((inl(Plain"all of this text should appear on the same line."))(attr((classnames())(parsinfo(((tag())(linenum 9)(originator Source))))))))))(attr((classnames())(parsinfo(((tag("\\mbox"))(linenum 9)(originator Source))))))))))(attr((classnames())(parsinfo(((tag())(linenum 9)(originator Source)))))))((blk(Paragraph(((inl(Plain"You can also create "))(attr((classnames())(parsinfo(((tag())(linenum 11)(originator Source)))))))((inl(Span(((inl(Plain custom))(attr((classnames())(parsinfo(((tag())(linenum 11)(originator Source))))))))))(attr((classnames())(parsinfo(((tag("\\span"))(linenum 11)(originator Source)))))))((inl(Plain" spans of text."))(attr((classnames())(parsinfo(((tag())(linenum 11)(originator Source))))))))))(attr((classnames())(parsinfo(((tag())(linenum 11)(originator Source)))))))((blk(Paragraph(((inl(Plain"Inline "))(attr((classnames())(parsinfo(((tag())(linenum 13)(originator Source)))))))((inl(Bold(((inl(Plain"elements "))(attr((classnames())(parsinfo(((tag())(linenum 13)(originator Source)))))))((inl(Emph(((inl(Plain"may "))(attr((classnames())(parsinfo(((tag())(linenum 13)(originator Source)))))))((inl(Caps(((inl(Plain be))(attr((classnames())(parsinfo(((tag())(linenum 13)(originator Source))))))))))(attr((classnames())(parsinfo(((tag("\\caps"))(linenum 13)(originator Source)))))))((inl(Plain" deeply"))(attr((classnames())(parsinfo(((tag())(linenum 13)(originator Source))))))))))(attr((classnames())(parsinfo(((tag("\\emph"))(linenum 13)(originator Source)))))))((inl(Plain" nested"))(attr((classnames())(parsinfo(((tag())(linenum 13)(originator Source))))))))))(attr((classnames())(parsinfo(((tag("\\bold"))(linenum 13)(originator Source)))))))((inl(Plain .))(attr((classnames())(parsinfo(((tag())(linenum 13)(originator Source))))))))))(attr((classnames())(parsinfo(((tag())(linenum 13)(originator Source)))))))))(bibs())(notes())(toc())(labels())(customs())))
